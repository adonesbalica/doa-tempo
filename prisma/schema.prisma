// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(uuid())
  name         String
  email        String         @unique
  password     String
  description  String?
  avatarUrl    String?
  resumeUrl    String?
  city         String?
  created_at   DateTime       @default(now())
  Organization Organization[]
  Application  Application[]

  @@map("users")
}

model Organization {
  id          String        @id @default(uuid())
  name        String        @unique
  description String
  photos      String[]
  city        String
  state       String
  tags        String[]
  contact     Json
  created_at  DateTime      @default(now())
  userId      String
  user        User          @relation(fields: [userId], references: [id])
  Opportunity Opportunity[]

  @@map("organization")
}

model Opportunity {
  id             String        @id @default(uuid())
  title          String
  description    String
  requirements   String?
  createdAt      DateTime      @default(now())
  organization   Organization  @relation(fields: [organizationId], references: [id])
  organizationId String
  applications   Application[]

  @@map("opportunity")
}

model Application {
  id            String       @id @default(uuid())
  user          User         @relation(fields: [userId], references: [id])
  userId        String
  Opportunity   Opportunity? @relation(fields: [opportunityId], references: [id])
  opportunityId String
  message       String?
  created_at    DateTime     @default(now())

  @@unique([userId, opportunityId])
  @@map("application")
}
